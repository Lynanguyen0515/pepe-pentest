from __future__ import print_function

import sys
import getopt
from itertools import cycle

def help():
    print('XOR Decoder/Encoder')
    print('')
    print('Options:')
    print('    -h  Print help message.')
    print('    -x  String and key to be xored.')
    print('')
    print('Example: xor -x "Hello, world" "101"')

def main():
    try: 
        opts, args = getopt.getopt(sys.argv[1:], "hx:", ["help", "xor"])
    except getopt.GetoptError:
        help()
        sys.exit(2)
    string = None 
    key = None 
    for s, a in opts: 
        if s in ("-x", "--xor"):
            string = sys.argv[2]
            key = sys.argv[3]
        if s in ("-h", "--help"):
            help()
            sys.exit()
    if string is None: 
        help()
        sys.exit()
    if key is None:
        help()
        sys.exit()
    try:
        t = xor(string, key)
        print(str(t))
    except: 
        print("Could not perform xor-ing operation")

def xor(data, key):
    encoded_data = data.encode('utf-8')
    encoded_key = key.encode('utf-8')
    text = bytearray(a^b for a, b in zip(encoded_data, cycle(encoded_key)))
    return text

if __name__ == "__main__":
    main()